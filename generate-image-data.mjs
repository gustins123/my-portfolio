// generate-image-data.mjs (v2 - More Robust)

import fs from 'fs';
import path from 'path';
import imageSize from 'image-size';

const portfolioDir = path.join(process.cwd(), 'public/images/portfolio');
const outputFile = path.join(process.cwd(), 'src/data/portfolioData.ts');

console.log(`Scanning images in: ${portfolioDir}`);

try {
  const files = fs.readdirSync(portfolioDir);

  const imageData = files
    .filter(file => /\.(jpg|jpeg|png|gif|webp)$/i.test(file))
    .map(file => {
      const filePath = path.join(portfolioDir, file);
      
      // --- THE FIX IS HERE ---
      // 1. Read the file into a buffer first.
      const buffer = fs.readFileSync(filePath);
      // 2. Pass the buffer to imageSize instead of the path.
      const dimensions = imageSize(buffer);
      // --- END OF FIX ---

      console.log(`Processing: ${file} -> ${dimensions.width}x${dimensions.height}`);
      
      return {
        src: `/images/portfolio/${file}`,
        width: dimensions.width,
        height: dimensions.height,
        title: path.basename(file, path.extname(file))
               .replace(/[-_]/g, ' ')
               .replace(/\b\w/g, l => l.toUpperCase()),
      };
    });

  const fileContent = `// This file is auto-generated by generate-image-data.mjs
// Do not edit this file directly

export interface PortfolioImage {
  src: string;
  width: number;
  height: number;
  title?: string;
}

export const images: PortfolioImage[] = ${JSON.stringify(imageData, null, 2)};
`;

  fs.writeFileSync(outputFile, fileContent, 'utf8');

  console.log(`\n✅ Success! Image data has been generated at: ${outputFile}`);

} catch (error) {
  console.error('❌ Error generating image data:', error);
}